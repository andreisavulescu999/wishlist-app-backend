// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id      BigInt      @id @default(autoincrement())
  first_name    String?
  last_name     String
  password      String
  email         String   @unique
  age           Int?
  birthday      DateTime
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  deleted_at    DateTime?
  // chats         Chat[]
  groups        Groups[]
  userchat      UserChatGroups[]
  // userwishlist  UserWishlists[]
  @@map("users")
}

model Chat {
  id            BigInt       @id @default(autoincrement())
  group_id      BigInt 
  text          String?
  status_read   Boolean
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  deleted_at    DateTime? 

  @@map("chat")
}

model Groups {
  id            BigInt       @id @default(autoincrement())
  creator_id    BigInt 
  wishlist_id   BigInt 
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  deleted_at    DateTime?
  author        User      @relation(fields: [creator_id], references: [id])
  wishlist      Wishlists @relation(fields: [wishlist_id], references: [id])

  @@map("groups")
}
model UserChatGroups {
  id              BigInt       @id @default(autoincrement())
  user_id         BigInt 
  whislist_id     BigInt 
  status_read     Boolean
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())
  deleted_at      DateTime?
  author          User      @relation(fields: [user_id], references: [id])

  @@map("userchatgroups")
}
model Products {
  id            BigInt       @id @default(autoincrement())
  name          String
  features      Json
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  deleted_at    DateTime?

  @@map("products")
}


model Wishlists {
  id            BigInt      @id @default(autoincrement())
  user_id       BigInt 
  product_id    Json
  name          String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  deleted_at  DateTime?

  groups Groups[]
  userwishlist UserWishlists[]
  @@map("wishlists")
}

model UserWishlists {
  id            BigInt      @id @default(autoincrement())
  wishlist_id   BigInt
  // creator_id    BigInt 
  purchased     Boolean  @default(false)
  purchased_by  Json?
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
  deleted_at    DateTime?
  wishlist      Wishlists @relation(fields: [wishlist_id], references: [id])
  // author        User      @relation(fields: [creator_id], references: [id])
  @@map("userwishlists")
}